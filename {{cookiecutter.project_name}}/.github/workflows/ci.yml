name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Code Quality
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run ruff linting
        run: uv run ruff check

      - name: Run ruff formatting
        run: uv run ruff format --check

      - name: Run type checking
        run: uv run mypy

  test:
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    name: Test Python {% raw %}${{ matrix.python-version }}{% endraw %} on {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Install dependencies
        run: uv sync --python {% raw %}${{ matrix.python-version }}{% endraw %} --all-extras --dev

      - name: Run tests
        run: uv run pytest --cov --cov-report=xml --cov-report=term

      {% if cookiecutter.codecov == 'y' %}- name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}{% endif %}
